apiVersion: v1
kind: Service
metadata:
  name: auth-service
  labels:
    app: auth-service
    tier: service
spec:
  ports:
  # here we expose only your service proxy port
  - name: grpc-port
    port: 3000
    targetPort: 3000
  selector:
    app: auth-service
    tier: service
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: auth-service
spec:
  hosts:
  - "*"
  gateways:
  - hypertube-gateway
  http:
  # internal routes
  - match:
    - uri:
        prefix: /hypertube.auth.InternalAuthService
      gateways:
      - mesh
    route:
    - destination:
        host: auth-service
        port:
          number: 3000
  # public routes
  - match:
    - uri:
        prefix: /hypertube.auth.AuthService
    route:
    - destination:
        host: auth-service
        port:
          number: 3000
    corsPolicy:
      allowOrigin:
        - "*"
      allowMethods:
        - POST
        - GET
        - OPTIONS
        - PUT
        - DELETE
      allowHeaders:
        - grpc-timeout
        - content-type
        - keep-alive
        - access-token
        - user-agent
        - cache-control
        - content-type
        - content-transfer-encoding
        - custom-header-1
        - x-accept-content-transfer-encoding
        - x-accept-response-streaming
        - x-user-agent
        - x-grpc-web
      maxAge: 1728s
      exposeHeaders:
        - custom-header-1
        - grpc-status
        - grpc-message
      allowCredentials: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  labels:
    app: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
      tier: service
  template:
    metadata:
      labels:
        app: auth-service
        tier: service
    spec:
      containers:
      - name: auth-service
        image: hypertube/auth-service
        imagePullPolicy: IfNotPresent
        env:
        - name: AUTO_ACTIVATION
          value: true
        ports:
        - name: grpc-port
          containerPort: 3000
